<source>
  @type tail
  path C:/opt/fluent/var/log/(로그파일이름).log
  pos_file C:/opt/fluent/var/log/fluent/(로그파일이름).log.pos
  read_from_head true
  tag parse.test
  format none
</source>

<filter parse.test>
  @type parser
  key_name message
  <parse>
    @type regexp
    expression /^(?<prefix1>[^ ]*) (?<prefix2>[^ ]*) (?<rawdata>.*)$/
  </parse>
</filter>

<filter parse.test>
  @type record_transformer
  enable_ruby true
  <record>
    rawdata ${record["rawdata"].scan(/(?:[^\s"']+|"[^"]*"|'[^']*')+/).join("\t")}
  </record>
</filter>

<filter parse.test>
  @type parser
  key_name rawdata
  <parse>
    @type ltsv
    label_delimiter =
  </parse>
</filter>

<filter parse.test>
  @type record_transformer
  enable_ruby true
  <record>
    new_record ${record.to_json.gsub(/:"\\"(.*?)\\""/, ':"\1"')}
  </record>
</filter>

<filter parse.test>
  @type parser
  key_name new_record
  reserve_data false
  <parse>
    @type json
  </parse>
</filter>

<match parse.**>
  @type file
  path C:/opt/fluent/var/log/output/(저장할 jsonl파일 이름)
  path_suffix .jsonl
  append true
  <format>
    @type json
  </format>
  <buffer>
    @type memory
    flush_mode interval
    flush_interval 5s
  </buffer>
</match>